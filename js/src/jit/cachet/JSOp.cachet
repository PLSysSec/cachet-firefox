enum JSOp {
    Undefined,
    Null,
    False,
    True,
    Int32,
    Zero,
    One,
    Int8,
    Uint16,
    Uint24,
    Double,
    BigInt,
    String,
    Symbol,
    Void,
    Typeof,
    TypeofExpr,
    Pos,
    Neg,
    BitNot,
    Not,
    BitOr,
    BitXor,
    BitAnd,
    Eq,
    Ne,
    StrictEq,
    StrictNe,
    Lt,
    Gt,
    Le,
    Ge,
    Instanceof,
    In,
    Lsh,
    Rsh,
    Ursh,
    Add,
    Sub,
    Inc,
    Dec,
    Div,
    Mod,
    ToPropertyKey,
    ToNumeric,
    ToString,
    GlobalThis,
    NewTarget,
    DynamicImport,
    ImportMeta,
    NewInit,
    NewObject,
    Object,
    ObjWithProto,
    InitProp,
    InitHiddenProp,
    InitLockedProp,
    InitElem,
    InitHiddenElem,
    InitLockedElem,
    InitPropGetter,
    InitHiddenPropGetter,
    InitElemGetter,
    InitHiddenElemGetter,
    InitPropSetter,
    InitHiddenPropSetter,
    InitElemSetter,
    InitHiddenElemSetter,
    GetProp,
    GetElem,
    SetProp,
    StrictSetProp,
    SetElem,
    StrictSetElem,
    DelProp,
    StrictDelProp,
    DelElem,
    StrictDelElem,
    HasOwn,
    CheckPrivateField,
    SuperBase,
    GetPropSuper,
    GetElemSuper,
    SetPropSuper,
    StrictSetPropSuper,
    SetElemSuper,
    StrictSetElemSuper,
    Iter,
    MoreIter,
    IsNoIter,
    EndIter,
    CheckIsObj,
    CheckObjCoercible,
    ToAsyncIter,
    MutateProto,
    NewArray,
    InitElemArray,
    InitElemInc,
    Hole,
    RegExp,
    Lambda,
    LambdaArrow,
    SetFunName,
    InitHomeObject,
    CheckClassHeritage,
    FunWithProto,
    BuiltinObject,
    Call,
    CallIter,
    FunApply,
    FunCall,
    CallIgnoresRv,
    SpreadCall,
    OptimizeSpreadCall,
    Eval,
    SpreadEval,
    StrictEval,
    StrictSpreadEval,
    ImplicitThis,
    GImplicitThis,
    CallSiteObj,
    IsConstructing,
    New,
    SuperCall,
    SpreadNew,
    SpreadSuperCall,
    SuperFun,
    CheckThisReinit,
    Generator,
    InitialYield,
    AfterYield,
    FinalYieldRval,
    Yield,
    IsGenClosing,
    AsyncAwait,
    AsyncResolve,
    Await,
    CanSkipAwait,
    MaybeExtractAwaitValue,
    ResumeKind,
    CheckResumeKind,
    Resume,
    JumpTarget,
    LoopHead,
    Goto,
    JumpIfFalse,
    JumpIfTrue,
    And,
    Or,
    Coalesce,
    Case,
    Default,
    TableSwitch,
    Return,
    GetRval,
    SetRval,
    RetRval,
    CheckReturn,
    Throw,
    ThrowMsg,
    ThrowSetConst,
    Try,
    TryDestructuring,
    Exception,
    ResumeIndex,
    Gosub,
    Finally,
    Retsub,
    Uninitialized,
    InitLexical,
    InitGLexical,
    InitAliasedLexical,
    CheckLexical,
    CheckAliasedLexical,
    CheckThis,
    BindGName,
    BindName,
    GetName,
    GetGName,
    GetArg,
    GetLocal,
    GetAliasedVar,
    GetAliasedDebugVar,
    GetImport,
    GetBoundName,
    GetIntrinsic,
    Callee,
    EnvCallee,
    SetName,
    StrictSetName,
    SetGName,
    StrictSetGName,
    SetArg,
    SetLocal,
    SetAliasedVar,
    SetIntrinsic,
    PushLexicalEnv,
    PopLexicalEnv,
    DebugLeaveLexicalEnv,
    RecreateLexicalEnv,
    FreshenLexicalEnv,
    PushClassBodyEnv,
    PushVarEnv,
    EnterWith,
    LeaveWith,
    BindVar,
    GlobalOrEvalDeclInstantiation,
    DelName,
    Arguments,
    Rest,
    FunctionThis,
    Pop,
    PopN,
    Dup,
    Dup2,
    DupAt,
    Swap,
    Pick,
    Unpick,
    Nop,
    Lineno,
    NopDestructuring,
    ForceInterpreter,
    DebugCheckSelfHosted,
    Debugger,
}

impl JSOp {
    fn isStrictEqualityOp(jsop: JSOp) -> Bool {
        jsop == JSOp::StrictEq || jsop == JSOp::StrictNe
    }

    fn isLooseEqualityOp(jsop: JSOp) -> Bool {
        jsop == JSOp::Eq || jsop == JSOp::Ne
    }
}
